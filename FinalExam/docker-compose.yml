services:
  # SQL Server Database
  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: fizzbuzz-database
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - fizzbuzz-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'YourStrong@Passw0rd' -Q 'SELECT 1' || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Backend API (.NET 8)
  backend:
    build:
      context: ./BackEnd/WebApplication1
      dockerfile: Dockerfile
      target: final
    container_name: fizzbuzz-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=database,1433;Database=FizzBuzzGameDB;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;Encrypt=false;
      - ASPNETCORE_HTTP_PORTS=8080
    ports:
      - "5071:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - fizzbuzz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend (Next.js)
  frontend:
    build:
      context: ./FrontEnd/my-app
      dockerfile: Dockerfile
      target: production
    container_name: fizzbuzz-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:5071
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - fizzbuzz-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# Named volumes for data persistence
volumes:
  sqlserver_data:
    driver: local

# Custom network for service communication
networks:
  fizzbuzz-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
