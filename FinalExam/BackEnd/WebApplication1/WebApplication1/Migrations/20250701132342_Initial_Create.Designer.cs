// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250701132342_Initial_Create")]
    partial class Initial_Create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Entities.GameAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AnsweredAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("GameSessionId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("PlayerAnswer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AnsweredAt")
                        .HasDatabaseName("IX_GameAnswers_AnsweredAt");

                    b.HasIndex("GameSessionId")
                        .HasDatabaseName("IX_GameAnswers_GameSessionId");

                    b.HasIndex("IsCorrect")
                        .HasDatabaseName("IX_GameAnswers_IsCorrect");

                    b.HasIndex("GameSessionId", "Number")
                        .IsUnique()
                        .HasDatabaseName("IX_GameAnswers_GameSessionId_Number_UNIQUE");

                    b.ToTable("GameAnswers", null, t =>
                        {
                            t.HasCheckConstraint("CK_GameAnswers_Number", "\"Number\" >= 1");
                        });
                });

            modelBuilder.Entity("WebApplication1.Entities.GameRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Divisor")
                        .HasColumnType("integer");

                    b.Property<int>("GameTemplateId")
                        .HasColumnType("integer");

                    b.Property<string>("Replacement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GameTemplateId")
                        .HasDatabaseName("IX_GameRules_GameTemplateId");

                    b.HasIndex("GameTemplateId", "Divisor")
                        .IsUnique()
                        .HasDatabaseName("IX_GameRules_GameTemplateId_Divisor");

                    b.ToTable("GameRules", null, t =>
                        {
                            t.HasCheckConstraint("CK_GameRules_Divisor", "\"Divisor\" >= 2");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Divisor = 3,
                            GameTemplateId = 1,
                            Replacement = "Fizz"
                        },
                        new
                        {
                            Id = 2,
                            Divisor = 5,
                            GameTemplateId = 1,
                            Replacement = "Buzz"
                        },
                        new
                        {
                            Id = 3,
                            Divisor = 7,
                            GameTemplateId = 2,
                            Replacement = "Foo"
                        },
                        new
                        {
                            Id = 4,
                            Divisor = 11,
                            GameTemplateId = 2,
                            Replacement = "Boo"
                        },
                        new
                        {
                            Id = 5,
                            Divisor = 103,
                            GameTemplateId = 2,
                            Replacement = "Loo"
                        });
                });

            modelBuilder.Entity("WebApplication1.Entities.GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CorrectAnswers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<int>("GameTemplateId")
                        .HasColumnType("integer");

                    b.Property<int>("IncorrectAnswers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("StartedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.HasIndex("GameTemplateId")
                        .HasDatabaseName("IX_GameSessions_GameTemplateId");

                    b.HasIndex("IsCompleted")
                        .HasDatabaseName("IX_GameSessions_IsCompleted");

                    b.HasIndex("PlayerName")
                        .HasDatabaseName("IX_GameSessions_PlayerName");

                    b.HasIndex("StartedAt")
                        .HasDatabaseName("IX_GameSessions_StartedAt");

                    b.ToTable("GameSessions", null, t =>
                        {
                            t.HasCheckConstraint("CK_GameSessions_Duration", "\"Duration\" >= 10 AND \"Duration\" <= 300");

                            t.HasCheckConstraint("CK_GameSessions_Scores", "\"CorrectAnswers\" >= 0 AND \"IncorrectAnswers\" >= 0");
                        });
                });

            modelBuilder.Entity("WebApplication1.Entities.GameTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<int>("MaxRange")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(100);

                    b.Property<int>("MinRange")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Author")
                        .HasDatabaseName("IX_GameTemplates_Author");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_GameTemplates_CreatedAt");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_GameTemplates_Name");

                    b.ToTable("GameTemplates", null, t =>
                        {
                            t.HasCheckConstraint("CK_GameTemplates_MinRange", "\"MinRange\" >= 1");

                            t.HasCheckConstraint("CK_GameTemplates_Range", "\"MinRange\" < \"MaxRange\"");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "System",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            MaxRange = 100,
                            MinRange = 1,
                            Name = "Classic FizzBuzz"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Alex",
                            CreatedAt = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            MaxRange = 1000,
                            MinRange = 1,
                            Name = "FooBooLoo"
                        });
                });

            modelBuilder.Entity("WebApplication1.Entities.GameAnswer", b =>
                {
                    b.HasOne("WebApplication1.Entities.GameSession", "GameSession")
                        .WithMany("Answers")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GameAnswers_GameSessions");

                    b.Navigation("GameSession");
                });

            modelBuilder.Entity("WebApplication1.Entities.GameRule", b =>
                {
                    b.HasOne("WebApplication1.Entities.GameTemplate", "GameTemplate")
                        .WithMany("Rules")
                        .HasForeignKey("GameTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GameRules_GameTemplates");

                    b.Navigation("GameTemplate");
                });

            modelBuilder.Entity("WebApplication1.Entities.GameSession", b =>
                {
                    b.HasOne("WebApplication1.Entities.GameTemplate", "GameTemplate")
                        .WithMany()
                        .HasForeignKey("GameTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GameSessions_GameTemplates");

                    b.Navigation("GameTemplate");
                });

            modelBuilder.Entity("WebApplication1.Entities.GameSession", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("WebApplication1.Entities.GameTemplate", b =>
                {
                    b.Navigation("Rules");
                });
#pragma warning restore 612, 618
        }
    }
}
